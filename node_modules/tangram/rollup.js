// import { rollup } from 'rollup';
import commonjs from 'rollup-plugin-commonjs';
import nodeResolve from 'rollup-plugin-node-resolve';
import string from 'rollup-plugin-string';
import globals from 'rollup-plugin-node-globals';
import builtins from 'rollup-plugin-node-builtins';

// rollup({
export default {
  entry: 'src/module.js',
  plugins: [

    builtins(),

    string({
      include: '**/*.glsl',
      exclude: ['node_modules/**']
    }),

    nodeResolve({
      jsnext: true,
      main: true,
      browser: true//,
      // preferBuiltins: true
    }),

    commonjs({
      // non-CommonJS modules will be ignored, but you can also
      // specifically include/exclude files
      include: 'node_modules/**',  // Default: undefined
      // exclude: [ 'node_modules/foo/**', 'node_modules/bar/**' ],  // Default: undefined
      exclude: [
        'node_modules/rollup-plugin-node-globals/**',
        'node_modules/rollup-plugin-node-builtins/**'//,
        // 'node_modules/process-es6/browser.js'
      ],

      // search for files other than .js files (must already
      // be transpiled by a previous plugin!)
      // extensions: [ '.js', '.coffee' ],  // Default: [ '.js' ]

      // if true then uses of `global` won't be dealt with by this plugin
      ignoreGlobal: true,  // Default: false

      // if false then skip sourceMap generation for CommonJS modules
      // sourceMap: false,  // Default: true

      // explicitly specify unresolvable named exports
      // (see below for more details)
      // namedExports: { './module.js': ['foo', 'bar' ] }  // Default: undefined
    }),

    globals()


  ]
}

// ).then(bundle => bundle.write({
//   dest: 'src/module.js',
//   moduleName: 'Tangram`',
//   format: 'iife'
// })).catch(err => console.log(err.stack));
